CREATE SCHEMA IF NOT EXISTS public;
SET search_path = public;
CREATE TABLE Role(
                     role_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                     role int NOT NULL,
                     created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                     updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Status (
                        status_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        accepted BOOLEAN NOT NULL DEFAULT FALSE,
                        declined BOOLEAN NOT NULL DEFAULT FALSE,
                        pending BOOLEAN NOT NULL DEFAULT TRUE,
                        created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                        updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "User"(
                       user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       username VARCHAR(255) NOT NULL,
                       first_name VARCHAR(255) NOT NULL,
                       last_name VARCHAR(255) NOT NULL,
                       password VARCHAR(255) NOT NULL,
                       email VARCHAR(255) NOT NULL,
                       role_id INT NOT NULL,
                       created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                       updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                       FOREIGN KEY (role_id) REFERENCES Role(role_id)
);

CREATE TABLE Notification(
                             notification_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             title VARCHAR(255) NOT NULL,
                             message jsonb NOT NULL,
                             created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                             updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Document (
                          document_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          title VARCHAR(255) NOT NULL,
                          description VARCHAR(1000) NOT NULL,
                          content jsonb NOT NULL,
                          user_id INT NOT NULL,
                          status_id INT NOT NULL,
                          created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          FOREIGN KEY (user_id) REFERENCES "User"(user_id),
                          FOREIGN KEY (status_id) REFERENCES Status(status_id)
);

CREATE TABLE Service (
                         service_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         title VARCHAR(255) NOT NULL,
                         description VARCHAR(100) NOT NULL,
                         content jsonb NOT NULL,
                         user_id INT NOT NULL,
                         status_id INT NOT NULL,
                         created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                         updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                         FOREIGN KEY (user_id) REFERENCES "User"(user_id),
                         FOREIGN KEY (status_id) REFERENCES Status(status_id)
);

CREATE TABLE "Order" (
                         order_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         title VARCHAR(255) NOT NULL,
                         description VARCHAR(1000) NOT NULL,
                         user_id INT NOT NULL,
                         status_id INT NOT NULL,
                         staff_processed_order_id INT NOT NULL,
                         created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                         updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                         FOREIGN KEY (user_id) REFERENCES "User"(user_id),
                         FOREIGN KEY (status_id) REFERENCES Status(status_id),
                         FOREIGN KEY (staff_processed_order_id) REFERENCES "User"(user_id)
);

